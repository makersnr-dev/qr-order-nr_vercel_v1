const API='/api';
const els={tableInput:document.getElementById('tableInput'),codeInput:document.getElementById('codeInput'),menuList:document.getElementById('menuList'),sumPrice:document.getElementById('sumPrice'),btnPay:document.getElementById('btnPay')};
const params=new URLSearchParams(location.search);const TABLE=params.get('table')||'';if(!TABLE){alert('QR에 테이블번호가 없습니다. 관리자에게 문의해주세요.');}els.tableInput.value=TABLE;
const CART_KEY='qr_cart_'+TABLE;let cart=(()=>{try{return JSON.parse(localStorage.getItem(CART_KEY)||'{}');}catch(_){return{};}})();function save(){localStorage.setItem(CART_KEY,JSON.stringify(cart));}
function sum(){return Object.values(cart).reduce((s,it)=>s+it.price*it.qty,0);}function won(x){return(x||0).toLocaleString('ko-KR')+'원';}
async function j(u,o){const r=await fetch(u,o);if(!r.ok)throw new Error(await r.text());return r.json();}
async function loadMenu(){const list=await j(API+'/menu');els.menuList.innerHTML='';for(const m of list){if(!cart[m.id])cart[m.id]={id:m.id,name:m.name,price:m.price,qty:0};const row=document.createElement('div');row.className='item';row.innerHTML=`<div class="item-name">${m.name}</div><div class="item-price">${won(m.price)}</div><div class="item-ctrl"><button class="btn sub">-</button><span class="qty">${cart[m.id].qty}</span><button class="btn add">+</button></div>`;const q=row.querySelector('.qty');row.querySelector('.add').onclick=()=>{cart[m.id].qty++;q.textContent=cart[m.id].qty;save();renderTotal();};row.querySelector('.sub').onclick=()=>{cart[m.id].qty=Math.max(0,cart[m.id].qty-1);q.textContent=cart[m.id].qty;save();renderTotal();};els.menuList.appendChild(row);}renderTotal();}
function renderTotal(){const total=sum();els.sumPrice.textContent=won(total);els.btnPay.disabled=total<=0;}
async function verifyCode(){const input=(els.codeInput.value||'').trim();if(!/^[0-9]{4,6}$/.test(input)){alert('코드를 4~6자리 숫자로 입력해주세요.');return false;}const d=await j(API+'/verify-code',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({code:input})});return !!d.ok;}
async function getClientKey(){const z=await j(API+'/toss/public-key');return z.key;}
els.btnPay.addEventListener('click',async()=>{try{if(Object.values(cart).every(it=>it.qty===0))return;const ok=await verifyCode();if(!ok){location.href='/fail.html?table='+encodeURIComponent(TABLE)+'&reason='+encodeURIComponent('코드가 올바르지 않습니다.');return;}const items=Object.values(cart).filter(it=>it.qty>0);const amount=sum();const orderId='ORD-'+Date.now();const orderName=(items.map(x=>`${x.name}x${x.qty}`).join(', ')||'주문').slice(0,80);sessionStorage.setItem('qr_checkout_'+TABLE,JSON.stringify({items,amount,orderId}));const clientKey=await getClientKey();const mod=await import('https://js.tosspayments.com/v1');const tossPayments=mod.default(clientKey);const base=location.origin;await tossPayments.requestPayment('카드',{amount,orderId,orderName,successUrl:`${base}/success.html?table=${encodeURIComponent(TABLE)}`,failUrl:`${base}/fail.html?table=${encodeURIComponent(TABLE)}`});}catch(e){location.href='/fail.html?table='+encodeURIComponent(TABLE)+'&reason='+encodeURIComponent(e.message||'주문 오류');}});
await loadMenu();